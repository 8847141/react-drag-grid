{"version":3,"sources":["chart.js","DragLayout.js","App.js","serviceWorker.js","index.js"],"names":["getBarChart","tooltip","trigger","axisPointer","type","grid","left","right","bottom","containLabel","xAxis","data","axisLine","lineStyle","color","axisLabel","show","textStyle","axisTick","yAxis","splitLine","splitNumber","series","name","barWidth","itemStyle","normal","stack","getLineChart","boundaryGap","symbol","getPieChart","formatter","radius","center","avoidLabelOverlap","borderColor","borderWidth","label","labelLine","value","__webpack_require__","d","__webpack_exports__","ResponsiveReactGridLayout","WidthProvider","Responsive","Header","Layout","Content","DragLayout","props","_this","Object","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","generateDOM","_","map","state","widgets","l","i","option","component","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","echarts_for_react__WEBPACK_IMPORTED_MODULE_13___default","notMerge","lazyUpdate","style","width","height","key","data-grid","className","onClick","onRemoveItem","bind","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","layouts","getFromLS","ls","global","localStorage","JSON","parse","getItem","e","setItem","stringify","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","addItem","x","length","cols","y","Infinity","w","h","Date","getTime","toString","setState","concat","_Users_qiaozhi_GitHub_react_drag_grid_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","console","log","filter","item","index","layout","saveToLS","_this2","antd__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","padding","antd__WEBPACK_IMPORTED_MODULE_10__","marginRight","addChart","marginTop","background","minHeight","assign","onLayoutChange","PureComponent","defaultProps","lg","md","sm","xs","xxs","rowHeight","App","react_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b56925b.chunk.js","sourcesContent":["export function getBarChart() {\n  const option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: { // 坐标轴指示器，坐标轴触发有效\n        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n      }\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [{\n      type: 'category',\n      data: ['2014', '2015', '2016', '2017', '2018', '2019'],\n      axisLine:{\n        lineStyle:{\n          color:'#8FA3B7',//y轴颜色\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: '#6D6D6D',\n        }\n      },\n      axisTick: {show: false}\n    }],\n    yAxis: [{\n      type: 'value',\n      splitLine:{show: false},\n      //max: 700,\n      splitNumber: 3,\n      axisTick: {show: false},\n      axisLine:{\n        lineStyle:{\n          color:'#8FA3B7',//y轴颜色\n        }\n      },\n      axisLabel: {\n        show: true,\n        textStyle: {\n          color: '#6D6D6D',\n        }\n      },\n    }],\n    series: [\n\n      {\n        name: 'a',\n        type: 'bar',\n        barWidth: '40%',\n        itemStyle: {\n          normal: {\n            color: '#FAD610'\n          }\n        },\n        stack: '信息',\n        data: [320, 132, 101, 134, 90, 30]\n      },\n      {\n        name: 'b',\n        type: 'bar',\n        itemStyle: {\n          normal: {\n            color: '#27ECCE'\n          }\n        },\n        stack: '信息',\n        data: [220, 182, 191, 234, 290, 230]\n      },\n      {\n        name: 'c',\n        type: 'bar',\n        itemStyle: {\n          normal: {\n            color: '#4DB3F5'\n          }\n        },\n        stack: '信息',\n        data: [150, 132, 201, 154, 90, 130]\n      }\n    ]\n  };\n  return option;\n}\n\nexport function getLineChart() {\n  //option\n  const option = {\n    color: ['#D53A35'],\n    tooltip: {\n      trigger: 'axis',\n      //formatter: \"{b} <br> 合格率: {c}%\"\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      name: '',\n      boundaryGap: false,\n      axisLine:{\n        show:false,\n        lineStyle:{\n          color:'#525252'\n        }\n      },\n      axisTick:{\n        show:false\n      },\n      axisLabel:{\n        color:'#525252'\n      },\n      data: ['01', '02', '03', '04', '05', '06', '07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24']\n    },\n    yAxis: {\n      type: 'value',\n      name: '',\n      axisLine:{\n        show:false,\n      },\n      axisTick:{\n        show:false\n      },\n      axisLabel:{\n        color:'#525252'\n      },\n      splitLine:{\n        lineStyle:{\n          type:'dotted',\n          color:'#AAA'//F3F3F3\n        }\n      }\n    },\n    series: [{\n      name: 'a',\n      type: 'line',\n      symbol: 'circle',\n      data: [100,120, 132, 101, 134, 90, 230, 210,80,20,90,210,200,100,120, 132, 101, 134, 90, 230, 210,80,20,90]\n    }\n    ]\n  };\n  return option;\n}\n\nexport function getPieChart() {\n  //option\n  const option = {\n    color: ['#3AA1FF', '#36CBCB', '#4ECB73', '#FBD338'],\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b}: {c} ({d}%)'\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    series: [{\n      name: '消费能力',\n      type: 'pie',\n      radius: ['40%', '55%'],\n      center: ['50%', '55%'],\n      avoidLabelOverlap: true,\n      itemStyle: {\n        normal: {\n          borderColor: '#FFFFFF',\n          borderWidth: 2\n        }\n      },\n      label: {\n        normal: {\n          show: false,\n        },\n      },\n      labelLine: {\n        normal: {\n          show: false\n        }\n      },\n      data: [{\n        name: 'a',\n        value: '20'\n      }, {\n        name: 'b',\n        value: '40'\n      }, {\n        name: 'c',\n        value: '10'\n      }, {\n        name: 'd',\n        value: '10'\n      }]\n    }]\n  };\n  return option;\n}","import React, { PureComponent } from 'react';\nimport { Layout,Button } from 'antd';\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport _ from \"lodash\";\nimport ReactEcharts from 'echarts-for-react';\nimport { getBarChart,getLineChart,getPieChart } from \"./chart\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\nconst { Header, Content} = Layout;\n\nexport default class DragLayout extends PureComponent {\n  static defaultProps = {\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n    rowHeight: 100,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      layouts: this.getFromLS(\"layouts\") || {},\n      widgets:[]\n    }\n  }\n\n  getFromLS(key) {\n    let ls = {};\n    if (global.localStorage) {\n      try {\n        ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n      } catch (e) {\n        /*Ignore*/\n      }\n    }\n    return ls[key];\n  }\n\n  saveToLS(key, value) {\n    if (global.localStorage) {\n      global.localStorage.setItem(\n        \"rgl-8\",\n        JSON.stringify({\n          [key]: value\n        })\n      );\n    }\n  }\n  generateDOM = () => {\n    return _.map(this.state.widgets, (l, i) => {\n      let option;\n      if (l.type === 'bar') {\n        option = getBarChart();\n      }else if (l.type === 'line') {\n        option = getLineChart();\n      }else if (l.type === 'pie') {\n        option = getPieChart();\n      }\n      let component = (\n        <ReactEcharts\n          option={option}\n          notMerge={true}\n          lazyUpdate={true}\n          style={{width: '100%',height:'100%'}}\n        />\n      )\n      return (\n        <div key={l.i} data-grid={l}>\n          <span className='remove' onClick={this.onRemoveItem.bind(this, i)}>x</span>\n          {component}\n        </div>\n      );\n    });\n  };\n\n  addChart(type) {\n    const addItem = {\n      x: (this.state.widgets.length * 3) % (this.state.cols || 12),\n      y: Infinity, // puts it at the bottom\n      w: 3,\n      h: 2,\n      i: new Date().getTime().toString(),\n    };\n    this.setState(\n      {\n        widgets: this.state.widgets.concat({\n          ...addItem,\n          type,\n        }),\n      },\n    );\n  };\n\n  onRemoveItem(i) {\n    console.log(this.state.widgets)\n    this.setState({\n      widgets: this.state.widgets.filter((item,index) => index !=i)\n    });\n\n  }\n\n  onLayoutChange(layout, layouts) {\n    this.saveToLS(\"layouts\", layouts);\n    this.setState({ layouts });\n  }\n\n  render() {\n   return(\n     <Layout>\n      <Header style={{ position: 'fixed', zIndex: 1, width: '100%','padding': '0 30px' }}>\n        <Button type=\"primary\" style={{'marginRight':'7px'}} onClick={this.addChart.bind(this,'bar')}>添加柱状图</Button>\n        <Button type=\"primary\" style={{'marginRight':'7px'}} onClick={this.addChart.bind(this,'line')}>添加折线图</Button>\n        <Button type=\"primary\" style={{'marginRight':'7px'}} onClick={this.addChart.bind(this,'pie')}>添加饼图</Button>\n      </Header>\n      <Content style={{ marginTop: 44 }}>\n        <div style={{ background: '#fff', padding: 20, minHeight: 800 }}>\n          <ResponsiveReactGridLayout\n            className=\"layout\"\n            {...this.props}\n            layouts={this.state.layouts}\n            onLayoutChange={(layout, layouts) =>\n              this.onLayoutChange(layout, layouts)\n            }\n          >\n            {this.generateDOM()}\n          </ResponsiveReactGridLayout>\n        </div>\n      </Content>\n    </Layout>\n   )}\n}\n","import React from 'react';\nimport './App.css';\nimport DragLayout from './DragLayout';\n\nfunction App() {\n  return (\n    <DragLayout></DragLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}